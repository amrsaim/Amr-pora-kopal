module.exports.config = {
	name: "kick",
	version: "1.0.2", // ржнрж╛рж░рзНрж╕ржи ржЖржкржбрзЗржЯ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
	hasPermssion: 0,
	credits: "CYBER тШвя╕П_ЁЦгШ -BOT тЪая╕П ЁЭС╗ЁЭСмЁЭСиЁЭС┤_ тШвя╕П and Re-fixed by Gemini",
    description: "the person you need to remove from the group by tag",
	commandCategory: "System", 
	usages: "[tag]", 
	cooldowns: 0,
};

module.exports.languages = {
	"vi": {
		"error": "─Р├г c├│ lс╗Чi xс║гy ra, vui l├▓ng thс╗н lс║бi sau",
		"needPermssion": "Cс║зn quyс╗Бn quс║гn trс╗Л vi├кn nh├│m\nVui l├▓ng th├кm v├а thс╗н lс║бi!",
		"missingTag": "Bс║бn phс║гi tag ng╞░с╗Эi cс║зn kick"
	},
	"en": {
		"error": "Error! An error occurred. Please try again later!",
		"needPermssion": "Need group admin\nPlease add and try again!",
		"missingTag": "You need tag some person to kick"
	}
}

module.exports.run = async function({ api, event, getText, Threads }) {
	// ржпрж╛ржжрзЗрж░ржХрзЗ ржХрж┐ржХ ржХрж░рждрзЗ рж╣ржмрзЗ рждрж╛ржжрзЗрж░ ID ржЧрзБрж▓рзЛ ржирзЗржУрзЯрж╛ рж╣ржЪрзНржЫрзЗ
	const mention = Object.keys(event.mentions);

	// ржпржжрж┐ ржХрзЗржЙ ржЯрзНржпрж╛ржЧ ржирж╛ ржХрж░рж╛ рж╣рзЯ
	if (mention.length === 0) {
		return api.sendMessage(getText("missingTag"), event.threadID, event.messageID);
	}

	try {
		// ржерзНрж░рзЗржб ржбрзЗржЯрж╛ рж╕ржарж┐ржХржнрж╛ржмрзЗ 'await' ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
		const threadInfo = (await Threads.getData(event.threadID)).threadInfo;

		// ржмржЯ ржЧрзНрж░рзБржк ржЕрзНржпрж╛ржбржорж┐ржи ржХрж┐ржирж╛ рждрж╛ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
		if (!threadInfo.adminIDs.some(item => item.id == api.getCurrentUserID())) {
			return api.sendMessage(getText("needPermssion"), event.threadID, event.messageID);
		}

		// ржХрж┐ржХ ржХрж░рж╛рж░ ржХржорж╛ржирзНржб ржкрзНрж░ржжрж╛ржиржХрж╛рж░рзА ржЧрзНрж░рзБржк ржЕрзНржпрж╛ржбржорж┐ржи ржХрж┐ржирж╛ рждрж╛ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
		if (!threadInfo.adminIDs.some(item => item.id == event.senderID)) {
			// ржпржжрж┐ ржХрж┐ржХржХрж╛рж░рзА ржЕрзНржпрж╛ржбржорж┐ржи ржирж╛ рж╣рзЯ, рждржмрзЗ ржПржХржЯрж┐ ржмрж╛рж░рзНрждрж╛ ржжрж┐рзЯрзЗ ржлрж╛ржВрж╢ржи рж╢рзЗрж╖ ржХрж░рж╛ рж╣ржмрзЗред
			return api.sendMessage("You are not an administrator of this group, so you cannot use this command.", event.threadID, event.messageID);
		}

		// ржкрзНрж░рждрзНржпрзЗржХ ржЯрзНржпрж╛ржЧ ржХрж░рж╛ ржмрзНржпржХрзНрждрж┐ржХрзЗ рж▓рзБржкрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржХрж┐ржХ ржХрж░рж╛ рж╣ржмрзЗ
		for (const userID of mention) {
			// ржХрж┐ржХ ржХрж░рж╛рж░ ржЖржЧрзЗ ржПржХржЯрж┐ ржЫрзЛржЯ ржмрж┐рж▓ржорзНржм (Delay) ржпрзЛржЧ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
			setTimeout(async () => {
                // ржХрж┐ржХ ржХрж░рж╛рж░ ржЬржирзНржп API ржХрж▓
				await api.removeUserFromGroup(userID, event.threadID);
                // ржХрж┐ржХ рж╕ржлрж▓ рж╣рж▓рзЗ ржПржХржЯрж┐ ржмрж╛рж░рзНрждрж╛ ржкрж╛ржарж╛ржирзЛ ржпрзЗрждрзЗ ржкрж╛рж░рзЗ
                // api.sendMessage(`Removed user ${userID} from the group.`, event.threadID);
			}, 3000); // 3 рж╕рзЗржХрзЗржирзНржб ржкрж░ ржХрж┐ржХ ржХрж░ржмрзЗ
		}
        
        // ржХрж┐ржХ ржкрзНрж░рж╕рзЗрж╕ рж╢рзБрж░рзБ рж╣рзЯрзЗржЫрзЗ ржЬрж╛ржирж┐рзЯрзЗ ржПржХржЯрж┐ ржирж┐рж╢рзНржЪрж┐рждржХрж░ржг ржмрж╛рж░рзНрждрж╛ ржкрж╛ржарж╛ржирзЛ рж╣рж▓рзЛ
        api.sendMessage(`Attempting to kick ${mention.length} user(s) in a few moments.`, event.threadID);

	} catch (error) { 
        // ржХрзЛржирзЛ рждрзНрж░рзБржЯрж┐ ржШржЯрж▓рзЗ рждрзНрж░рзБржЯрж┐ ржмрж╛рж░рзНрждрж╛ ржкрж╛ржарж╛ржирзЛ рж╣ржмрзЗ ржПржмржВ рждрзНрж░рзБржЯрж┐ ржХржирж╕рзЛрж▓рзЗ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗ
        console.error(error);
        return api.sendMessage(getText("error"), event.threadID); 
    }
							}
